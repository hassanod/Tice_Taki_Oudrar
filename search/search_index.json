{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Langages de programmation ce site est sous forme d'une documentation du Chapitre 4 : Langages de programmation est cr\u00e9e par Zakaria taki & Hassan oudrar Pr\u00e9requis Notions d\u2019algorithmes Constantes, variables et types Instructions de base (lecture, \u00e9criture, affectation) Structure de contr\u00f4le de base Initiation python Python est un langage de programmation multiplateforme, ce qui signifie qu'il peut s'ex\u00e9cuter sur plusieurs plates-formes telles que Windows, macOS, Linux, et a m\u00eame \u00e9t\u00e9 port\u00e9 sur les machines virtuelles Java et .NET. Il est gratuit et open-source. M\u00eame si la plupart des Linux et Mac d'aujourd'hui ont Python pr\u00e9-install\u00e9, la version peut \u00eatre obsol\u00e8te. C'est donc toujours une bonne id\u00e9e d'installer la version la plus r\u00e9cente. Comment Installer python? Le moyen le plus simple d'ex\u00e9cuter Python consiste \u00e0 utiliser vscode IDE pour l'edition de votre code maitenant vous devez installez python depuis le site officiel localement. vscode est fourni avec la derni\u00e8re version de Python. Vous n'avez donc pas besoin d'installer Python s\u00e9par\u00e9ment. Suivez les \u00e9tapes suivantes pour ex\u00e9cuter Python sur votre ordinateur : T\u00e9l\u00e9charger vscode Ex\u00e9cutez le programme d'installation pour installer vscode sur votre ordinateur. Allez dans : Fichier > Nouveau. Enregistrez ensuite le fichier avec l'extension .py. Par exemple, bonjour.py, exemple.py, etc. Vous pouvez donner n'importe quel nom au fichier. Cependant, le nom du fichier doit se terminer par .py apr\u00e9s vous allez chercher une extention qui s'appelle python cr\u00e9e par microsoft et l'install\u00e9 Votre premier programme Python Maintenant que Python est op\u00e9rationnel, nous pouvons \u00e9crire notre premier programme Python. Cr\u00e9ons un programme tr\u00e8s simple appel\u00e9 Hello World. Un \"Bonjour, le monde!\" est un programme simple qui affiche Hello, World! sur l'\u00e9cran. Comme il s'agit d'un programme tr\u00e8s simple, il est souvent utilis\u00e9 pour pr\u00e9senter un nouveau langage de programmation aux d\u00e9butants. Tapez le code suivant dans n'importe quel \u00e9diteur de texte ou un IDE et enregistrez-le sous hello_world.py print(\"hello world\") Variables, constantes, affectation en Python En programmation, une variable est un conteneur (zone de stockage) pour contenir des donn\u00e9es. Par exemple : nombre = 10 Ici, nombre est la variable stockant la valeur 10. Comme nous pouvons le voir dans l'exemple ci-dessus, nous utilisons l'op\u00e9rateur d'affectation = pour affecter une valeur \u00e0 une variable. # affecter zakaria taki \u00e0 la variable zakaria taki nom = 'zakaria taki' print(nom) # sortie: zakaria taki changer la valeur d'une variable # affecter zakaria taki \u00e0 la variable zakaria taki nom = 'zakaria taki' print(nom) # sortie: zakaria taki nom = 'hassan oudrar' print(nom) # sortie: hassan oudrar les constants de python Une constante est un type sp\u00e9cial de variable dont la valeur ne peut pas \u00eatre modifi\u00e9e. En Python, les constantes sont g\u00e9n\u00e9ralement d\u00e9clar\u00e9es et affect\u00e9es dans un module (un nouveau fichier contenant des variables, des fonctions, etc. qui est import\u00e9 dans le fichier principal). Voyons comment nous d\u00e9clarons des constantes dans un fichier s\u00e9par\u00e9 et les utilisons dans le fichier principal, Cr\u00e9ez un constant.py : # declare constants PI = 3.14 GRAVITY = 9.8 Cr\u00e9ez un main.py : # import constant file we created above import constant print(constant.PI) # prints 3.14 print(constant.GRAVITY) # prints 9.8 Dans l'exemple ci-dessus, nous avons cr\u00e9\u00e9 le fichier de module constant.py. Ensuite, nous avons attribu\u00e9 la valeur constante \u00e0 PI et GRAVITY. Apr\u00e8s cela, nous cr\u00e9ons le fichier main.py et importons le module constant. Enfin, nous avons imprim\u00e9 la valeur constante. Types de donn\u00e9es en python Dans ce didacticiel, vous d\u00e9couvrirez diff\u00e9rents types de donn\u00e9es que nous pouvons utiliser en Python \u00e0 l'aide d'exemples. En programmation informatique, les types de donn\u00e9es sp\u00e9cifient le type de donn\u00e9es pouvant \u00eatre stock\u00e9es dans une variable. Par exemple: num = 24 Ici, 24 (un entier) est affect\u00e9 \u00e0 la variable num. Ainsi, le type de donn\u00e9es de nombre est de la classe int. voila un tableau qui decrit les diff\u00e9rents types de donn\u00e9es : Instructions de base (lecture, \u00e9criture) en python: la sortie en python:: En Python, nous pouvons simplement utiliser la fonction print() pour imprimer la sortie. Par exemple: print('python est tr\u00e9s fort') # Sortie: python est tr\u00e9s fort Ici, la fonction print() affiche la cha\u00eene entre guillemets simples. Syntaxe de print() Dans le code ci-dessus, la fonction print() prend un seul param\u00e8tre. Cependant, la syntaxe r\u00e9elle de la fonction d'impression accepte 5 param\u00e8tres l'entr\u00e9e en python:: # on utilise la fonction input pour prendre l'age de l'utilisateur: num = input('quel est ton age ? : ') print('ton age est :', num) # Sortie: 10 print('le type de num est :', type(num)) # Sortie: int Dans l'exemple ci-dessus, nous avons utilis\u00e9 la fonction input () pour prendre l'entr\u00e9e de l'utilisateur et stock\u00e9 l'entr\u00e9e de l'utilisateur dans la variable num. Il est important de noter que la valeur saisie 10 est une cha\u00eene et non un nombre. Ainsi, type(num) renvoie . Pour convertir l'entr\u00e9e de l'utilisateur en un nombre, nous pouvons utiliser les fonctions int() ou float() comme : Structure de contr\u00f4le de base en python En programmation informatique, nous utilisons l'instruction if pour ex\u00e9cuter un code de bloc uniquement lorsqu'une certaine condition est remplie. Par exemple, attribuer des notes (A, B, C) en fonction des notes obtenues par un \u00e9l\u00e8ve. si le pourcentage est sup\u00e9rieur \u00e0 90, attribuez la note A si le pourcentage est sup\u00e9rieur \u00e0 75, attribuez la note B si le pourcentage est sup\u00e9rieur \u00e0 65, attribuez la note C En Python, on va voir ensemble deux type de conditions : if d\u00e9claration instruction if...else The syntax of if statement in Python is: 1. Python si instruction La syntaxe de l'instruction if en Python est : if condition: # ici ton logique L'instruction if \u00e9value la condition. Si la condition est \u00e9valu\u00e9e \u00e0 True, le code \u00e0 l'int\u00e9rieur du corps de if est ex\u00e9cut\u00e9. Si la condition est \u00e9valu\u00e9e \u00e0 False, le code \u00e0 l'int\u00e9rieur du corps de if est ignor\u00e9. Exemple 1 : instruction Python if number = 10 # on teste si le nombre est superier a 0 if number > 0: print('le nombre est positive') print ('facile') #sortie : le nombre est positive facile Dans l'exemple ci-dessus, nous avons cr\u00e9\u00e9 une variable nomm\u00e9e number. Remarquez la condition de test, number > 0: Ici, \u00e9tant donn\u00e9 que le nombre est sup\u00e9rieur \u00e0 0, la condition \u00e9value True. Si nous changeons la valeur de la variable en un entier n\u00e9gatif. Disons -5. number = -5 Maintenant, lorsque nous ex\u00e9cutons le programme, la sortie sera : #sortie : facile Cela est d\u00fb au fait que la valeur de nombre est inf\u00e9rieure \u00e0 0. Par cons\u00e9quent, la condition prend la valeur False. Et, le corps du bloc if est ignor\u00e9. 2-instruction if...else Une instruction if peut avoir une clause else facultative. La syntaxe de l'instruction if...else est : if condition: # bloc d'instruction si la condition est vraie else: # bloc d'instruction si la condition est fausse L'instruction if...else \u00e9value la condition donn\u00e9e : Si la condition est \u00e9valu\u00e9e \u00e0 True, le code \u00e0 l'int\u00e9rieur si est ex\u00e9cut\u00e9 le code \u00e0 l'int\u00e9rieur d'autre est ignor\u00e9 Si la condition est \u00e9valu\u00e9e \u00e0 Faux, le code \u00e0 l'int\u00e9rieur d'autre est ex\u00e9cut\u00e9 le code \u00e0 l'int\u00e9rieur si est ignor\u00e9 EXEMPLE: number = 10 if number > 0: print('nombre Positive') else: print('Negative ') print('cette fonction est toujours execut\u00e9e') ce programme nous sortira 'nombre positive' si number est superieur \u00e0 0 sinon il sortira negative dans l'autre cas et la derniere instruction est toujours execut\u00e9e. car il est en dehors du bloc if en respecant la notion de L'indentation L'indentation fait r\u00e9f\u00e9rence aux espaces au d\u00e9but d'une ligne de code. Alors que dans d'autres langages de programmation, l'indentation dans le code sert uniquement \u00e0 la lisibilit\u00e9, l'indentation dans Python est tr\u00e8s importante. Python utilise l'indentation pour indiquer un bloc de code. Exercice de python Exercice 1: l'age: \u00c9crire un programme en Python qui de demande \u00e0 l'utilisateur son age et l'afficher en ecran Exercice 2: calcul de calories: \u00c9crire un programme en Python qui calcule combien de calories qui correspond \u00e0 un poids , demander \u00e0 l'utilisateur son poids Exercice 3: le carr\u00e9 d'un nombre: \u00c9crire un programme en Python qui calcule le carr\u00e9 d'un nombre Exercice 4: la surface d'un triangle: \u00c9crire un programme en Python qui calcule la surface d'un triangle Exercice 4: la mention de l'\u00e9l\u00e8ve: \u00c9crire un programme en Python qui renvoie le mention de l'\u00e9l\u00e8ve selon sa note si 10 < note < 12 --> passable si 12 < note < 14 --> assez bien si 14 < note < 16 --> bien si 16 < note < 20 --> T.bien Evaluation : {{ Evaluation de python en google docs :}}","title":"Langages de programmation"},{"location":"#langages-de-programmation","text":"ce site est sous forme d'une documentation du Chapitre 4 : Langages de programmation est cr\u00e9e par Zakaria taki & Hassan oudrar","title":"Langages de programmation"},{"location":"#prerequis","text":"Notions d\u2019algorithmes Constantes, variables et types Instructions de base (lecture, \u00e9criture, affectation) Structure de contr\u00f4le de base","title":"Pr\u00e9requis"},{"location":"#initiation-python","text":"Python est un langage de programmation multiplateforme, ce qui signifie qu'il peut s'ex\u00e9cuter sur plusieurs plates-formes telles que Windows, macOS, Linux, et a m\u00eame \u00e9t\u00e9 port\u00e9 sur les machines virtuelles Java et .NET. Il est gratuit et open-source. M\u00eame si la plupart des Linux et Mac d'aujourd'hui ont Python pr\u00e9-install\u00e9, la version peut \u00eatre obsol\u00e8te. C'est donc toujours une bonne id\u00e9e d'installer la version la plus r\u00e9cente. Comment Installer python? Le moyen le plus simple d'ex\u00e9cuter Python consiste \u00e0 utiliser vscode IDE pour l'edition de votre code maitenant vous devez installez python depuis le site officiel localement. vscode est fourni avec la derni\u00e8re version de Python. Vous n'avez donc pas besoin d'installer Python s\u00e9par\u00e9ment. Suivez les \u00e9tapes suivantes pour ex\u00e9cuter Python sur votre ordinateur : T\u00e9l\u00e9charger vscode Ex\u00e9cutez le programme d'installation pour installer vscode sur votre ordinateur. Allez dans : Fichier > Nouveau. Enregistrez ensuite le fichier avec l'extension .py. Par exemple, bonjour.py, exemple.py, etc. Vous pouvez donner n'importe quel nom au fichier. Cependant, le nom du fichier doit se terminer par .py apr\u00e9s vous allez chercher une extention qui s'appelle python cr\u00e9e par microsoft et l'install\u00e9 Votre premier programme Python Maintenant que Python est op\u00e9rationnel, nous pouvons \u00e9crire notre premier programme Python. Cr\u00e9ons un programme tr\u00e8s simple appel\u00e9 Hello World. Un \"Bonjour, le monde!\" est un programme simple qui affiche Hello, World! sur l'\u00e9cran. Comme il s'agit d'un programme tr\u00e8s simple, il est souvent utilis\u00e9 pour pr\u00e9senter un nouveau langage de programmation aux d\u00e9butants. Tapez le code suivant dans n'importe quel \u00e9diteur de texte ou un IDE et enregistrez-le sous hello_world.py print(\"hello world\")","title":"Initiation python"},{"location":"#variables-constantes-affectation-en-python","text":"En programmation, une variable est un conteneur (zone de stockage) pour contenir des donn\u00e9es. Par exemple : nombre = 10 Ici, nombre est la variable stockant la valeur 10. Comme nous pouvons le voir dans l'exemple ci-dessus, nous utilisons l'op\u00e9rateur d'affectation = pour affecter une valeur \u00e0 une variable. # affecter zakaria taki \u00e0 la variable zakaria taki nom = 'zakaria taki' print(nom) # sortie: zakaria taki changer la valeur d'une variable # affecter zakaria taki \u00e0 la variable zakaria taki nom = 'zakaria taki' print(nom) # sortie: zakaria taki nom = 'hassan oudrar' print(nom) # sortie: hassan oudrar les constants de python Une constante est un type sp\u00e9cial de variable dont la valeur ne peut pas \u00eatre modifi\u00e9e. En Python, les constantes sont g\u00e9n\u00e9ralement d\u00e9clar\u00e9es et affect\u00e9es dans un module (un nouveau fichier contenant des variables, des fonctions, etc. qui est import\u00e9 dans le fichier principal). Voyons comment nous d\u00e9clarons des constantes dans un fichier s\u00e9par\u00e9 et les utilisons dans le fichier principal, Cr\u00e9ez un constant.py : # declare constants PI = 3.14 GRAVITY = 9.8 Cr\u00e9ez un main.py : # import constant file we created above import constant print(constant.PI) # prints 3.14 print(constant.GRAVITY) # prints 9.8 Dans l'exemple ci-dessus, nous avons cr\u00e9\u00e9 le fichier de module constant.py. Ensuite, nous avons attribu\u00e9 la valeur constante \u00e0 PI et GRAVITY. Apr\u00e8s cela, nous cr\u00e9ons le fichier main.py et importons le module constant. Enfin, nous avons imprim\u00e9 la valeur constante.","title":"Variables, constantes, affectation en Python"},{"location":"#types-de-donnees-en-python","text":"Dans ce didacticiel, vous d\u00e9couvrirez diff\u00e9rents types de donn\u00e9es que nous pouvons utiliser en Python \u00e0 l'aide d'exemples. En programmation informatique, les types de donn\u00e9es sp\u00e9cifient le type de donn\u00e9es pouvant \u00eatre stock\u00e9es dans une variable. Par exemple: num = 24 Ici, 24 (un entier) est affect\u00e9 \u00e0 la variable num. Ainsi, le type de donn\u00e9es de nombre est de la classe int. voila un tableau qui decrit les diff\u00e9rents types de donn\u00e9es :","title":"Types de donn\u00e9es en python"},{"location":"#instructions-de-base-lecture-ecriture-en-python","text":"la sortie en python:: En Python, nous pouvons simplement utiliser la fonction print() pour imprimer la sortie. Par exemple: print('python est tr\u00e9s fort') # Sortie: python est tr\u00e9s fort Ici, la fonction print() affiche la cha\u00eene entre guillemets simples. Syntaxe de print() Dans le code ci-dessus, la fonction print() prend un seul param\u00e8tre. Cependant, la syntaxe r\u00e9elle de la fonction d'impression accepte 5 param\u00e8tres l'entr\u00e9e en python:: # on utilise la fonction input pour prendre l'age de l'utilisateur: num = input('quel est ton age ? : ') print('ton age est :', num) # Sortie: 10 print('le type de num est :', type(num)) # Sortie: int Dans l'exemple ci-dessus, nous avons utilis\u00e9 la fonction input () pour prendre l'entr\u00e9e de l'utilisateur et stock\u00e9 l'entr\u00e9e de l'utilisateur dans la variable num. Il est important de noter que la valeur saisie 10 est une cha\u00eene et non un nombre. Ainsi, type(num) renvoie . Pour convertir l'entr\u00e9e de l'utilisateur en un nombre, nous pouvons utiliser les fonctions int() ou float() comme :","title":"Instructions de base (lecture, \u00e9criture) en python:"},{"location":"#structure-de-controle-de-base-en-python","text":"En programmation informatique, nous utilisons l'instruction if pour ex\u00e9cuter un code de bloc uniquement lorsqu'une certaine condition est remplie. Par exemple, attribuer des notes (A, B, C) en fonction des notes obtenues par un \u00e9l\u00e8ve. si le pourcentage est sup\u00e9rieur \u00e0 90, attribuez la note A si le pourcentage est sup\u00e9rieur \u00e0 75, attribuez la note B si le pourcentage est sup\u00e9rieur \u00e0 65, attribuez la note C En Python, on va voir ensemble deux type de conditions : if d\u00e9claration instruction if...else The syntax of if statement in Python is: 1. Python si instruction La syntaxe de l'instruction if en Python est : if condition: # ici ton logique L'instruction if \u00e9value la condition. Si la condition est \u00e9valu\u00e9e \u00e0 True, le code \u00e0 l'int\u00e9rieur du corps de if est ex\u00e9cut\u00e9. Si la condition est \u00e9valu\u00e9e \u00e0 False, le code \u00e0 l'int\u00e9rieur du corps de if est ignor\u00e9. Exemple 1 : instruction Python if number = 10 # on teste si le nombre est superier a 0 if number > 0: print('le nombre est positive') print ('facile') #sortie : le nombre est positive facile Dans l'exemple ci-dessus, nous avons cr\u00e9\u00e9 une variable nomm\u00e9e number. Remarquez la condition de test, number > 0: Ici, \u00e9tant donn\u00e9 que le nombre est sup\u00e9rieur \u00e0 0, la condition \u00e9value True. Si nous changeons la valeur de la variable en un entier n\u00e9gatif. Disons -5. number = -5 Maintenant, lorsque nous ex\u00e9cutons le programme, la sortie sera : #sortie : facile Cela est d\u00fb au fait que la valeur de nombre est inf\u00e9rieure \u00e0 0. Par cons\u00e9quent, la condition prend la valeur False. Et, le corps du bloc if est ignor\u00e9. 2-instruction if...else Une instruction if peut avoir une clause else facultative. La syntaxe de l'instruction if...else est : if condition: # bloc d'instruction si la condition est vraie else: # bloc d'instruction si la condition est fausse L'instruction if...else \u00e9value la condition donn\u00e9e : Si la condition est \u00e9valu\u00e9e \u00e0 True, le code \u00e0 l'int\u00e9rieur si est ex\u00e9cut\u00e9 le code \u00e0 l'int\u00e9rieur d'autre est ignor\u00e9 Si la condition est \u00e9valu\u00e9e \u00e0 Faux, le code \u00e0 l'int\u00e9rieur d'autre est ex\u00e9cut\u00e9 le code \u00e0 l'int\u00e9rieur si est ignor\u00e9 EXEMPLE: number = 10 if number > 0: print('nombre Positive') else: print('Negative ') print('cette fonction est toujours execut\u00e9e') ce programme nous sortira 'nombre positive' si number est superieur \u00e0 0 sinon il sortira negative dans l'autre cas et la derniere instruction est toujours execut\u00e9e. car il est en dehors du bloc if en respecant la notion de L'indentation L'indentation fait r\u00e9f\u00e9rence aux espaces au d\u00e9but d'une ligne de code. Alors que dans d'autres langages de programmation, l'indentation dans le code sert uniquement \u00e0 la lisibilit\u00e9, l'indentation dans Python est tr\u00e8s importante. Python utilise l'indentation pour indiquer un bloc de code.","title":"Structure de contr\u00f4le de base en python"},{"location":"#exercice-de-python","text":"Exercice 1: l'age: \u00c9crire un programme en Python qui de demande \u00e0 l'utilisateur son age et l'afficher en ecran Exercice 2: calcul de calories: \u00c9crire un programme en Python qui calcule combien de calories qui correspond \u00e0 un poids , demander \u00e0 l'utilisateur son poids Exercice 3: le carr\u00e9 d'un nombre: \u00c9crire un programme en Python qui calcule le carr\u00e9 d'un nombre Exercice 4: la surface d'un triangle: \u00c9crire un programme en Python qui calcule la surface d'un triangle Exercice 4: la mention de l'\u00e9l\u00e8ve: \u00c9crire un programme en Python qui renvoie le mention de l'\u00e9l\u00e8ve selon sa note si 10 < note < 12 --> passable si 12 < note < 14 --> assez bien si 14 < note < 16 --> bien si 16 < note < 20 --> T.bien","title":"Exercice de python"},{"location":"#evaluation","text":"{{ Evaluation de python en google docs :}}","title":"Evaluation :"}]}